services:
  api-gateway:
    image: api-gateway
    build:
      context: .
      dockerfile: betterReads.ApiGateway/betterReads.ApiGateway.Web/Dockerfile
    ports: 
      - "5000:5000"
  auth:
    image: auth
    build:
      context: .
      dockerfile: betterReads.Auth/betterReads.Auth.Web/Dockerfile
    ports: 
      - "5001:5001"
  books:
    image: books
    build:
      context: .
      dockerfile: betterReads.Books/betterReads.Books.Web/Dockerfile
    ports: 
      - "5002:5002"
  recommendations:
    image: recommendations
    build:
      context: .
      dockerfile: betterReads.Recommendations/betterReads.Recommendations.Web/Dockerfile
    ports: 
      - "5003:5003"
  reviews:
    image: reviews
    build: ./BetterReads.Reviews/BetterReads.Reviews.Web
    ports: 
      - "5004:5004"
  shelves:
    image: shelves
    build:
      context: .
      dockerfile: betterReads.Shelves/betterReads.Shelves.Web/Dockerfile
    ports: 
      - "5005:5005"
  mongo:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo_data:/data/db"
      - "mongo_config:/data/configdb"

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes: 
      - ~/redis:/data
    command: ["redis-server"]

volumes:
  mongo_data:
  mongo_config: